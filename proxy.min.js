(function(c){if(!c.a){var f=function(){};f.prototype.get=function(b){return this[b]};f.prototype.set=function(b,a){this[b]=a};c.a=function(b,a){if(!(b instanceof Object&&a instanceof Object))throw new TypeError("Cannot create proxy with a non-object as target or handler");var c={get:!0,set:!0,apply:!0},g;for(g in a)if(!c[g])throw new TypeError("Proxy polyfill does not support trap '"+g+"'");var d=this;"apply"in a?d=function(){return a.apply(b,this,arguments)}:b instanceof Function&&(d=function(){return b.apply(this,
arguments)});var e=new f;a.get&&(e.get=function(b){return a.get(this,b,d)});a.set&&(e.set=function(b,c){a.set(this,b,c,d)});Object.getOwnPropertyNames(b).forEach(function(c){var a=Object.getOwnPropertyDescriptor(b,c);a.configurable?(delete a.value,delete a.writable,a.get=e.get.bind(b,c),a.set=e.set.bind(b,c),Object.defineProperty(d,c,a)):console.debug("ignoring prop",c,a)});Object.seal(b);Object.seal(d);return d};c.a.b=function(b,a){return{c:new c.a(b,a),f:function(){throw Error("revoke not implemented");
}}};c.a.revocable=c.a.b;c.Proxy=c.a}})(window);
